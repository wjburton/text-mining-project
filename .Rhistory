ingred <- df$ingredients
ingred
ingred[1]
ingred[2]
ingred[L]
ingred[4]
ingred[5]
ingred <- df$ingredients
head(ingre)
x <- head(ingred)
ingred <- sapply(x, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
ingred
ingred <- df$ingredients
ingred <- sapply(ingred, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
ingred <- as.character(ingred)
head(ingred)
head(ingred,10)
library(tm)
ingred <- df$ingredients
clean_ingred <- ingred[50]
clean_ingred
x <- clean_ingred
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
temp
temp <- corpus.temp <- tm_map(corpus, stemDocument, language = "english")
temp <- Corpus(temp)
temp <- Corpus(ingred_df)
temp <- Corpus(ingred)
length(ingred)
temp <- Corpus(VectorSource(ingred))
temp <- tm_map(corpus, stemDocument, language = "english")
temp <- tm_map(temp, stemDocument, language = "english")
temp
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
temp <- Corpus(VectorSource(temp))
temp <- tm_map(temp, stemDocument)
temp
TermDocumentMatrix(temp)
as.matrix(TermDocumentMatrix(temp))
?tm_map
x
head(ingred)
clean_ingred <- sapply(ingred, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
clean_ingred <- Corpus(VectorSource(clean_ingred))
clean_ingred <- tm_map(temp, stemDocument)
x <- matrix(clean_ingred)
x[[1]]
x <- as,matrix(clean_ingred)
x <- TermDocumentMatrix(clean_ingred)
x <- as.matrix(TermDocumentMatrix(clean_ingred))
x
ingred <- df$ingredients
clean_ingred <- sapply(ingred, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
clean_ingred <- Corpus(VectorSource(clean_ingred))
clean_ingred <- tm_map(temp, stemDocument)
x <- as.matrix(TermDocumentMatrix(clean_ingred))
ingred <- as.character(ingred)
head(x)
nrow(x)
ingred <- df$ingredients
clean_ingred <- sapply(ingred, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
clean_ingred <-  as.character(clean_ingred)
clean_ingred <- Corpus(VectorSource(clean_ingred))
clean_ingred <- tm_map(temp, stemDocument)
x <- as.matrix(TermDocumentMatrix(clean_ingred))
x
length(df$ingredients)
length(ingred)
clean_ingred <- sapply(ingred, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
length(clean_ingred)
clean_ingred <-  as.character(clean_ingred)
length(clean_ingred)
clean_ingred <-  as.character(clean_ingred)
clean_ingred <- Corpus(VectorSource(clean_ingred))
clean_ingred <- tm_map(clean_ingred, stemDocument)
x <- as.matrix(TermDocumentMatrix(clean_ingred))
head(x)
dim(x)
clean_ingre
clean_ingred
library(lsa)
install.packages('lsa')
library(lsa)
cos_sim <- cosine(x, term, measure = "cosine")
cos_sim <- cosine(x, term)
cos_sim <- cosine(x)
y <- x[,1:5]
head(y)
head(y,10)
head(y,50)
head(y,500)
pca(x)
ingred <- df$ingredients
ingred <- df$ingredients
#Clean ingredients
#remove numbers, single letters, special characters,
clean_ingred <- sapply(ingred, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
clean_ingred <-  as.character(clean_ingred)
head(clean_ingred)
clean_ingred <- Corpus(VectorSource(clean_ingred))
clean_ingred <- tm_map(clean_ingred, stemDocument)
x <- as.matrix(TermDocumentMatrix(clean_ingred))
term_document_frequency <- rowSums(x)
head(x)
head(term_document_frequency)
hist(term_document_frequency)
head(sort(term_document_frequency))
head(sort(term_document_frequency, desc = T))
head(sort(term_document_frequency, decreasing = T))
head(sort(term_document_frequency, decreasing = T),20)
rm(x)
?cosine
recipe1 <- clean_ingred[500]
recipe1 <- clean_ingred[44]
recipe2 <- clean_ingred[500]
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
t
tf
term_document_frequency
doc_term_freq ,0 term_document_frequency
doc_term_freq <- term_document_frequency
doc_freq <- doc_term_freq[doc_term_freq %in% rownames(tf)]
doc_freq
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
rownames(tf)
doc_term_freq
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
doc_freq
inv(doc_freq/nrow(df)
)
(doc_freq/nrow(df))^-1
log((doc_freq/nrow(df))^-1)
log(2)
log(4)
log(10)
idf1
tf
tf_idf <- tf*idf
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
tf_idf\
tf_idf
tf
tf
tf_idf
summ(tf_idf)
sum(tf_idf)
tf_idf
colSums(tf_idf)
sqrt(colSums(tf_idf)^2)
sqrt(colSums(tf_idf^2))
tf_idf^2
sqrt(colSums(tf_idf^2))
tf_idf <- tf_idf/ sqrt(colSums(tf_idf^2))
tf_idf
sum(tf_idf^2)
sum(tf_idf[,2^2)
sum(tf_idf[,2]^2)
colSums(tf_idf^2)
tf_idf <- tf*idf
tf_idf
sum(tf_idf[,2]^2)
sqrt(sum(tf_idf[,2]^2))
tf_idf
tf_idf[,2]/30.22
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
tf_idf
colSums(tf_idf^2)
sqrt(colSums(tf_idf^2))
tf_idf <- tf_idf/ sqrt(colSums(tf_idf^2))
tf_idf
tf_id[,2]
tf_idf[2]
tf_idf[,2]
tf_idf[,2]^2
sum(tf_idf[,2]^2)
sqrt(sum(tf_idf[,2]^2))
c(0.4082483, 0.0000000, 0.8164966, 0.4082483)
sum(c(0.4082483, 0.0000000, 0.8164966, 0.4082483)^2)
idf
tf_idf
tf_idf
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
tf_idf
colSums(tf_idf^2)
tf_idf
x <- tf_idf[,2]
scalar1 <- function(x) {x / sqrt(sum(x^2))}
scalar1(x)
sum(scalar1(x)^2)
x
1.51/.05
tf_idf <- tf_idf/ sqrt(colSums(tf_idf^2))
tf_idf
x2 <- tf_idf[,2]
head()
head(x)
scalar1(x)
head(x2)
sum(x2^2)
scalar1(x)
scalar1(x)^2
sum(scalar1(x)^)2
sum(scalar1(x)^2)
x2
x1
x
x1 <- x/sqrt((sum(x^2)))
x1
x2
x1-x2
4.7/33
4.7/30
x <- c(1,1,1,1,1)
x/30
x <- tf_idf[,2]
head(x)
x/30
magnitude <- sqrt(colSums(tf_idf^2))
magnitude
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
tf_idf
magnitude <- sqrt(colSums(tf_idf^2))
magnitudes
magnitudes
magnitude
x <- tf_idf[,2]
head(x)
x1 <- x/magnitude[2]
x1
scalar1(x)
x-x1
x2-x1
x2 <- scalar1(x)
x2-x1
magnitude
magnitude
magnitude %*% tf_idf
tf_idf
class(tf_idf)
magnitude <- as.matrix(sqrt(colSums(tf_idf^2)))
magnitude
magnitude <- as.matrix(sqrt(colSums(tf_idf^2)), ncol = 2)
magnitude
?as.matri
?as.matrix
magnitude <- matrix(sqrt(colSums(tf_idf^2)), ncol = 2)
magnitude
magnitude %*% tf_id
magnitude %*% tf_idf
class(magnitude)
class(tf_idf)
dim(tf_idf)
head(tf_idf)
magnitude <- matrix(sqrt(colSums(tf_idf^2)), nrow = 2)
magnitude
tf_idf
tf_idf %*%magnitude
tf_idf * magnitude
tf_idf
m %*% diag(magnitude)
diag(magnitude)
magnitude
?diag
head(tf-idf)
head(tf_idf)
head(tf_idf)/magnitude
magnitude <- matrix(sqrt(colSums(tf_idf^2)), ncol = 1)
magnitude
magnitude <- matrix(sqrt(colSums(tf_idf^2)), ncol = 2)
magnitude
head(tf_idf)
head(tf_idf)/magnitude
magnitude <- sqrt(colSums(tf_idf^2))
magnitude
tf_idf
head(tf_idf)
head(tf_idf)/magnitude
head(tf_idf[,2])/30
tf_idf[,1] <- tf_idf[,1]/magnitude[1]
tf_idf[,2] <- tf_idf[,2]/magnitude[2]
sum(tf_idf[,2]^2)
sum(tf_idf[,1]^2)
tf_idf <- function(recipe1, recipe2, doc_term_freq, n_docs){
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
magnitude <- sqrt(colSums(tf_idf^2))
tf_idf[,1] <- tf_idf[,1]/magnitude[1]
tf_idf[,2] <- tf_idf[,2]/magnitude[2]
}
tf_idf
cosine(tf_idf)
tf_idf
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
magnitude <- sqrt(colSums(tf_idf^2))
tf_idf[,1] <- tf_idf[,1]/magnitude[1]
tf_idf[,2] <- tf_idf[,2]/magnitude[2]
cosine(tf_idf)
cos_sim <- tf_idf[,1] * t(tf_idf[,2])
cos_sim
cos_sim <- tf_idf[,1] %*% t(tf_idf[,2])
cos_sim
tf_idf[,1]
t(tf_idf[,2])
cos_sim <- t(tf_idf[,1]) %*% tf_idf[,2]
cos_sim
tf_idf <- function(recipe1, recipe2, doc_term_freq, n_docs){
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
magnitude <- sqrt(colSums(tf_idf^2))
tf_idf[,1] <- tf_idf[,1]/magnitude[1]
tf_idf[,2] <- tf_idf[,2]/magnitude[2]
cos_sim <- t(tf_idf[,1]) %*% tf_idf[,2]
}
tf_idf <- function(recipe1, recipe2, doc_term_freq, n_docs){
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
magnitude <- sqrt(colSums(tf_idf^2))
tf_idf[,1] <- tf_idf[,1]/magnitude[1]
tf_idf[,2] <- tf_idf[,2]/magnitude[2]
cos_sim <- t(tf_idf[,1]) %*% tf_idf[,2]
return(cos_sim)
}
t(tf_idf[,1]) %*% tf_idf[,2]
cos_sim <- function(tf_idf){
cos_sim <- t(tf_idf[,1]) %*% tf_idf[,2]
return(cos_sim)
}
tf_idf <- function(recipe1, recipe2, doc_term_freq, n_docs){
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
magnitude <- sqrt(colSums(tf_idf^2))
tf_idf[,1] <- tf_idf[,1]/magnitude[1]
tf_idf[,2] <- tf_idf[,2]/magnitude[2]
return(tf_idf)
}
calculate_tf_idf <- function(recipe1, recipe2, doc_term_freq, n_docs){
tf <- Corpus(VectorSource(c(recipe1,recipe2)))
tf <- as.matrix(TermDocumentMatrix(tf))
doc_freq <- doc_term_freq[names(doc_term_freq) %in% rownames(tf)]
idf <-  log((doc_freq/nrow(df))^-1)
tf_idf <- tf*idf
magnitude <- sqrt(colSums(tf_idf^2))
tf_idf[,1] <- tf_idf[,1]/magnitude[1]
tf_idf[,2] <- tf_idf[,2]/magnitude[2]
return(tf_idf)
}
num_recipes <- length(clean_ingred)
clean_ingred <- sapply(ingred_df, function(x){
temp <- gsub('\\d',"",x) #remove numbers
temp <- gsub('[[:punct:]]', " ", temp) # remove special characters
temp <- gsub(" *\\b[[:alpha:]]{1}\\b *", " ", temp) #remove single letters
temp <- gsub('\\s+', " ", temp) #remove extra white space
temp <- tolower(temp)
return(temp)
})
num_recipes <- length(clean_ingred)
cos_sim_matrix <- matrix(rep(0,num_recipes^2), nrow = num_recipes)
num_recipes
34968^2
choose(100,2)
choose(1000,2)
choose(10000,2)
choose(100000,2)
for(i in 1:100000){}
for(i in 1:100000){}
for(i in 1:100000){
count = 0
for(i in 1:1000){
for(j in i:1000){
count = count + 1
}
}
count
choose(1000,2)
count = 0
for(i in 1:1000){
for(j in i+1:1000){
count = count + 1
}
}
count
count = 0
for(i in 1:1000){
for(j in (i+1):1000){
count = count + 1
}
}
count
choose(100000,2)
nrow(all_ingredients)
choose(32151,2)
length(unique(ingred))
nrow(all_ingred)
nrow(all_ingredients)
df[duplicated(df$ingredients),]
head(df[duplicated(df$ingredients),])
length(df$recipe_id)
length(df$recipe_id)
length(unique(df$recipe_id))
length(unique(df$ingredients))
?duplicated
table(df$ingredients)[table(df$ingredients) > 2]
table(df$recipe_id)[table(df$ingredients) > 2]
df[df$recipe_id == '67e465',]
x <- df[duplicated(df$ingredients),]
head(x)
length(unique(x$ingredients))
df[df$ingredients == x$ingredients[1],]
df[df$ingredients == x$ingredients[2],]
df[df$ingredients == x$ingredients[100],]
df[df$ingredients == x$ingredients[12],]
df[df$ingredients == x$ingredients[101],]
df[df$ingredients == x$ingredients[500],]
recipes <- recipes[!duplicated(recipes$recipe_id),]
df <- merge(recipes, ingredients, by = 'recipe_id')
nrow(df)
length(unique(df$recipe_id))
length(unique(df$ingredients))
x <- df[duplicated(df$ingredients),]
head(x)
df[df$ingredients == x$ingredients[1],]
df[df$ingredients == x$ingredients[1],]
df[df$ingredients == x$ingredients[12],]
df[df$ingredients == x$ingredients[11],]
